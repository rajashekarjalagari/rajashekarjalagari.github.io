{"version":3,"sources":["planet.js","App.js","reportWebVitals.js","index.js"],"names":["Planet","props","handleChange","event","value","setState","state","planets","bind","planetsDetails","planet","this","map","i","id","isFavourite","axios","url","method","withCredentials","then","res","data","console","log","classes","AppBar","position","Tabs","onChange","variant","scrollButtons","aria-label","Tab","label","Typography","Card","style","width","display","marginLeft","CardContent","component","name","CardActions","IconButton","color","onClick","favorite","filter","Component","withStyles","theme","bigIndicator","height","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5763bea6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport axios from \"axios\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\n\nconst styles = theme => ({\n  bigIndicator: {\n    height: 5\n  }\n});\n\nexport class Planet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      planets: [],\n      value: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.planetsDetails = this.planetsDetails.bind(this);\n  }\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  favorite(planet) {\n    const planets = this.state.planets.map(i => {\n      if (i.id === planet.id) {\n        i.isFavourite = !i.isFavourite;\n      }\n      return i;\n    });\n\n    this.setState({\n      planets\n    });\n  }\n\n  planetsDetails() {\n    const config = {\n      url: `https://assignment-machstatz.herokuapp.com/planet`,\n      method: \"GET\",\n      withCredentials: false\n    };\n    axios(config).then(res => {\n      this.setState(\n        {\n          planets: res.data\n        },\n        () => {\n          console.log(this.state.planets, \"plants\");\n        }\n      );\n    });\n  }\n\n  componentDidMount() {\n    this.planetsDetails();\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { value } = this.state;\n\n    return (\n      <div>\n        <AppBar position=\"static\">\n          <Tabs\n            value={value}\n            onChange={this.handleChange}\n            variant=\"scrollable\"\n            scrollButtons=\"off\"\n            aria-label=\"scrollable prevent tabs example\"\n          >\n            <Tab label=\"Planets\" aria-label=\"phone\"></Tab>\n            <Tab label=\"Favorite\" aria-label=\"favorite\"></Tab>\n          </Tabs>\n        </AppBar>\n        <div key=\"tab-content\">\n          {value === 0 && (\n            <Typography>\n              {\" \"}\n              <div>\n                {this.state.planets.map(planet => (\n                  <Card\n                    variant=\"outlined\"\n                    style={{\n                      width: \"200px\",\n                      display: \"inline-block\",\n                      marginLeft: \"13px\"\n                    }}\n                  >\n                    <CardContent>\n                      <Typography variant=\"h5\" component=\"h2\">\n                        {planet.name}\n                      </Typography>\n                    </CardContent>\n                    <CardActions>\n                      <IconButton\n                        color=\"primary\"\n                        aria-label=\"upload picture\"\n                        component=\"span\"\n                        onClick={() => {\n                          this.favorite(planet);\n                        }}\n                      >\n                        {planet.isFavourite ? (\n                          <FavoriteIcon />\n                        ) : (\n                          <FavoriteBorderIcon />\n                        )}\n                      </IconButton>\n                    </CardActions>\n                  </Card>\n                ))}\n              </div>\n            </Typography>\n          )}\n          {value === 1 && (\n            <Typography>\n              {this.state.planets\n                .filter(i => i.isFavourite)\n                .map(planet => (\n                  <Card\n                    variant=\"outlined\"\n                    style={{\n                      width: \"200px\",\n                      display: \"inline-block\",\n                      marginLeft: \"13px\"\n                    }}\n                  >\n                    <CardContent>\n                      <Typography variant=\"h5\" component=\"h2\">\n                        {planet.name}\n                      </Typography>\n                    </CardContent>\n                    <CardActions>\n                      <IconButton\n                        color=\"primary\"\n                        aria-label=\"upload picture\"\n                        component=\"span\"\n                        onClick={() => {\n                          this.favorite(planet);\n                        }}\n                      >\n                        {planet.isFavourite ? (\n                          <FavoriteIcon />\n                        ) : (\n                          <FavoriteBorderIcon />\n                        )}\n                      </IconButton>\n                    </CardActions>\n                  </Card>\n                ))}\n            </Typography>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nPlanet.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Planet);\n","import React, { Component } from 'react'\nimport Planet from './planet'\n\nexport class App extends Component {\n    render() {\n        return (\n            <div>\n                <Planet />\n            </div>\n        )\n    }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}